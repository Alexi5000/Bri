version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: bri-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bri-network

  mcp-server:
    build:
      context: .
      dockerfile: Dockerfile.mcp
    container_name: bri-mcp-server
    ports:
      - "8000:8000"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - REDIS_URL=redis://redis:6379
      - DATABASE_PATH=/app/data/bri.db
      - VIDEO_STORAGE_PATH=/app/data/videos
      - FRAME_STORAGE_PATH=/app/data/frames
      - CACHE_STORAGE_PATH=/app/data/cache
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bri-network
    restart: unless-stopped

  streamlit-ui:
    build:
      context: .
      dockerfile: Dockerfile.ui
    container_name: bri-streamlit-ui
    ports:
      - "8501:8501"
    environment:
      - GROQ_API_KEY=${GROQ_API_KEY}
      - MCP_SERVER_URL=http://mcp-server:8000
      - DATABASE_PATH=/app/data/bri.db
      - VIDEO_STORAGE_PATH=/app/data/videos
      - FRAME_STORAGE_PATH=/app/data/frames
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      mcp-server:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - bri-network
    restart: unless-stopped

volumes:
  redis-data:
    driver: local

networks:
  bri-network:
    driver: bridge
